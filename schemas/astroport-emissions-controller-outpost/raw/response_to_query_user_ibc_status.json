{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "UserIbcStatus",
  "description": "Contains the pending IBC message or an error",
  "type": "object",
  "properties": {
    "error": {
      "anyOf": [
        {
          "$ref": "#/definitions/UserIbcError"
        },
        {
          "type": "null"
        }
      ]
    },
    "pending_msg": {
      "anyOf": [
        {
          "$ref": "#/definitions/VxAstroIbcMsg"
        },
        {
          "type": "null"
        }
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UserIbcError": {
      "description": "Contains failed IBC along with the error message",
      "type": "object",
      "required": [
        "err",
        "msg"
      ],
      "properties": {
        "err": {
          "type": "string"
        },
        "msg": {
          "$ref": "#/definitions/VxAstroIbcMsg"
        }
      },
      "additionalProperties": false
    },
    "VxAstroIbcMsg": {
      "description": "Internal IBC message to be sent from outpost to the hub over voting channel",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "vote"
          ],
          "properties": {
            "vote": {
              "type": "object",
              "required": [
                "voter",
                "votes",
                "voting_power"
              ],
              "properties": {
                "voter": {
                  "type": "string"
                },
                "votes": {
                  "description": "Voting power distribution",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/Decimal"
                  }
                },
                "voting_power": {
                  "description": "Actual voting power reported from outpost",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint128"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_user_votes"
          ],
          "properties": {
            "update_user_votes": {
              "type": "object",
              "required": [
                "is_unlock",
                "voter",
                "voting_power"
              ],
              "properties": {
                "is_unlock": {
                  "description": "Marker defines whether this packet was sent from vxASTRO unlock context",
                  "type": "boolean"
                },
                "voter": {
                  "type": "string"
                },
                "voting_power": {
                  "description": "Actual voting power reported from outpost",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint128"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
